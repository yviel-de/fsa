---
- name: "alpine : libvirt : put together version string"
  ansible.builtin.shell: echo {{ ansible_facts.distribution_version }} | cut -d '.' -f-2
  register: apkver
  changed_when: false

- name: "alpine : libvirt : activate community repos"
  ansible.builtin.lineinfile:
    path: /etc/apk/repositories
    line: "{{ item }}"
    state: present
  loop:
    - "http://dl-cdn.alpinelinux.org/alpine/v{{ apkver.stdout }}/main"
    - "http://dl-cdn.alpinelinux.org/alpine/v{{ apkver.stdout }}/community"
  register: community_repo

- name: "alpine : libvirt : install packages"
  community.general.apk:
    name: libvirt,libvirt-daemon,qemu-img,qemu-system-{{ ansible_facts.machine }},qemu-modules,openrc,ovmf{{ ',acl' if virt.vms|map(attribute='install')|selectattr('template','defined')|map(attribute='template')|select('==', true)|length > 0 }}
    state: present
    update_cache: yes

#- name: "alpine : libvirt : enable uefi"
#  ansible.builtin.lineinfile:
#    path: /etc/libvirt/qemu.conf
#    line: nvram = [ "/usr/share/OVMF/QEMU_EFI.fd:/usr/share/OVMF/QEMU_VARS.fd" ]
#    regex: ^nvram
#    state: present
#  notify:
#    - kvm_reload

- name: "alpine : libvirt : enable module"
  community.general.modprobe:
    name: kvm
    state: present
    params: 'nested=1'
    persistent: present
  notify:
    - kvm_reload

- name: "alpine : libvirt : also on boot"
  ansible.builtin.lineinfile:
    path: /etc/modules
    line: "kvm"
    state: present

- name: "alpine : libvirt : make sure is running"
  ansible.builtin.service:
    name: libvirtd
    state: started
    enabled: true

- name: "alpine : libvirt : network counter"
  set_fact:
    netcounter: 1

- name: "alpine : libvirt : setup networks"
  ansible.builtin.include_tasks:
    file: kvm_netsetup.yaml
  loop:
    - public
    - private
    - staging

- name: "ansible : libvirt : get rid of default net"
  ansible.builtin.shell: virsh net-list | grep -q default && virsh net-undefine default >/dev/null 2>&1 && echo changed || echo absent
  register: netdefault
  changed_when: netdefault.stdout == "changed"
  failed_when: netdefault.stdout != "absent" and netdefault.stdout != "changed"

- name: "alpine : libvirt : allow bridge"
  ansible.builtin.lineinfile:
    path: /etc/qemu/bridge.conf
    line: allow br0
    state: present
  notify:
    - kvm_reload

- name: "alpine : libvirt : allow dhcp"
  ansible.builtin.command: echo 0 > /proc/sys/net/bridge/bridge-nf-call-iptables
  changed_when: false

- name: "alpine : libvirt : forward broadcast"
  ansible.posix.sysctl:
    name: net.ipv4.conf.all.bc_forwarding
    value: 1
    sysctl_set: true
    state: present

- name: "alpine : libvirt : setup tables"
  ansible.builtin.template:
    src: alpine_dhcp_{{ item }}.j2
    dest: /etc/local.d/alpine_dhcp_kvm.{{ item }}
    mode: 0755
  register: tables
  notify:
    - local_start
  loop:
    - start
    - stop

# todo: replace with flush_handlers?
- name: "alpine : libvirt : and exec them" # noqa: no-handler
  ansible.builtin.command: sh /etc/local.d/alpine_dhcp_kvm.start
  when: tables.changed

- name: "alpine : libvirt : create home for disks"
  ansible.builtin.file:
    path: /home/vms
    state: directory
    mode: 0700
