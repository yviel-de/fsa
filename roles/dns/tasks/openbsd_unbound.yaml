---
# point resolv.conf to localhost, tell dhcpleased to ignore server-provided dns
- name: "obsd : dns : template the config"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: "0644"
  loop:
    - { src: unbound.conf.j2, dst: /var/unbound/etc/unbound.conf }
#    - { src: resolv.conf.j2, dst: /etc/resolv.conf }
    - { src: dhcpleased.conf.j2, dst: /etc/dhcpleased.conf }
  notify:
    - unbound_restart
    - dhcpleased_restart

- name: "obsd : dns : set up logfile"
  ansible.builtin.file:
    path: /var/log/unbound.log
    state: touch
    mode: "0600"
  changed_when: false

# pure convenience
- name: "obsd : dns : symlink it to /etc"
  ansible.builtin.file:
    src: /var/unbound/etc/unbound.conf
    dest: /etc/unbound.conf
    state: link

- name: "obsd : dns : not exists. generate..."
  ansible.builtin.command: /usr/sbin/unbound-anchor -a /var/unbound/db/root.key
  args:
    creates: /var/unbound/db/root.key
  failed_when: false

- name: "obsd : dns : get root hints"
  ansible.builtin.command: ftp -o /var/unbound/etc/root.hints https://www.internic.net/domain/named.root
  args:
    creates: /var/unbound/db/root.key
  notify:
    - unbound_restart

- name: "obsd : dns : set up filtering"
  ansible.builtin.include_tasks: openbsd_adblock.yaml
  when: net.dns.filter | default(true)
